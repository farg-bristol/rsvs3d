{
	"build_systems":
	[
		{
			"file_regex": "^([^ ]*):(\\d+):(\\d+):\\s*(.*)$",
			"name": "Custom Make",
			"shell_cmd": "make ",
			"variants":
			[
				{
					"name": "testall",
					"shell_cmd": "make testall"
				},
				{
					"name": "testnew",
					"shell_cmd": "make testnew"
				},
				{
					"name": "testall clean",
					"shell_cmd": "make testall -B"
				},
				{
					"name": "testnew clean",
					"shell_cmd": "make testnew -B"
				},
				{
					"name": "clean",
					"shell_cmd": "make clean"
				}
			]
		}
	],
	"folders":
	[
		{
			"path": "SRCC"
		},
		{
			"path": "D:\\alexa\\Documents\\MATLAB"
		}
	],
	"syntax_override":
	{
		"\\.cpp$":
		[
			"User",
			"C++RSVS3D"
		],
		"\\.hpp$":
		[
			"User",
			"C++RSVS3D"
		]
	},
	// "settings": {
 //        "SublimeLinter.linters.cppcheck.disable": false, 
 //        "SublimeLinter.linters.cppcheck.args": [], 
 //        "SublimeLinter.linters.cppcheck.enable": "style", 
 //        "SublimeLinter.linters.cppcheck.excludes": ["variableScope"], 
 //        "SublimeLinter.linters.cppcheck.std": [
 //            "c++11"
 //        ], 
 //        "SublimeLinter.linters.gcc.c++_executable": "g++", 
 //        "SublimeLinter.linters.gcc.c++_extra_flags": [
 //            "-fsyntax-only", 
 //            "-std=c++11"
 //        ], 
 //        "SublimeLinter.linters.gcc.c_executable": "gcc", 
 //        "SublimeLinter.linters.gcc.c_extra_flags": [
 //            "-fsyntax-only", 
 //            "-std=c90"
 //        ], 
 //        "SublimeLinter.linters.gcc.disable": false, 
 //        "SublimeLinter.linters.gcc.include_dirs": [
 //            "C:\\ap1949include\\Eigen_all\\Eigen\\"
 //        ], 
 //        "SublimeLinter.linters.gcc.selector": "source.c++"
 //    },
 
 "settings":
 {
 	"sublimegdb_workingdir": "${folder:${project_path:main_test.exe}}",
         // NOTE: You MUST provide --interpreter=mi for the plugin to work
         "sublimegdb_commandline": "gdb --interpreter=mi ./main_test.exe",

         "ecc_common_flags": ["-ISRCC",
			    // some example includes
			    "-I/usr/include",
			    "-I$project_base_path/src",
			    // this is needed to include the correct headers for clang
			    "-I/usr/lib/clang/$clang_version/include",
			],
         "easy_clang_complete_verbose": true,
         
         
     }
 }
